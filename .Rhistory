t_score = qt(diff_income / sqrt(var), df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income))
var_income_older = var(nyc_older_half$Income)
diff_income = mean_income_older - mean_income_young
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
t_score = qt(diff_income / sqrt(var), df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income))
old
old
old
old
diff_income = mean_income_young - mean_income_old
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
t_score = qt(diff_income / sqrt(var), df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income))
diff_income = mean_income_young - mean_income_older
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
t_score = qt(diff_income / sqrt(var), df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income))
t_score = qt(diff_income / sqrt(var), df = df)
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = pt(t_score, df = df)
avg_age = mean(nyc$Age)
# Part 1 ####
# Hypothesis test: younger than average NYC person has
# the same income as older than average NYC person
#
# Null Hypothesis: difference is 0
# Alternative Hypothesis: difference is not 0
above_50 = nyc %>% filter(Age > avg_age)
below_50 = nyc %>% filter(Age <= avg_age)
avg_income_above_50 = mean(above_50$Income)
avg_income_below_50 = mean(below_50$Income)
n_above_50 = length(above_50$Income) - 1
n_below_50 = length(below_50$Income) - 1
d_hat = avg_income_below_50 - avg_income_above_50
d_null = 0
var_income_above_50 = var(above_50$Income)
var_income_below_50 = var(below_50$Income)
# assume both groups have the same variance
var_pooled = ((n_above_50 * var_income_above_50)
+ (n_below_50 * var_income_below_50))
/ (n_above_50 + n_below_50)
var_d_hat = var_pooled * sqrt((1/n_above_50) + (1/n_below_50))
sd_d_hat = sqrt(var_d_hat)
ndf = n_above_50 + n_below_50
t_stats = (d_hat - d_null) / sd_d_hat
p_val = 2 * (1 - pt(abs(t_stats), df = ndf))
alpha = 1/100
p_val < alpha
mean_income_young = mean(nyc_younger_half$Income)
mean_income_older = mean(nyc_older_half$Income)
var_income_young = var(nyc_younger_half$Income)
var_income_older = var(nyc_older_half$Income)
diff_income = mean_income_young - mean_income_older
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = pt(t_score, df = df)
diff_income = mean_income_older - mean_income_younger
diff_income = mean_income_older - mean_income_young
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = pt(t_score, df = df)
_youn
_youn
_youn
diff_income = mean_income_young - mean_income_older
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = pt(t_score, df = df)
p_val = 2 * (1 - pt(abs(t_score), df = df))
nyc = read.csv("../Data/New_York_City_Census.csv")
library(tidyverse)
df_2_sample_t_test = function(x, y) {
x = as_vector(x)
y = as_vector(y)
s2_x = var(x)
s2_y = var(y)
n_x = length(x)
n_y = length(y)
df_x = n_x - 1
df_y = n_y - 1
approx = (s2_x / n_x + s2_y / n_y)^2 /
(s2_x^2 / (n_x^2 * df_x) + s2_y^2 / (n_y^2 * df_y))
return(approx)
}
mean_age = mean(nyc$Age)
nyc_older_half = nyc %>% filter(nyc$Age > mean_age)
nyc_younger_half = nyc %>% filter(nyc$Age <= mean_age)
mean_income_young = mean(nyc_younger_half$Income)
mean_income_older = mean(nyc_older_half$Income)
var_income_young = var(nyc_younger_half$Income)
var_income_older = var(nyc_older_half$Income)
diff_income = mean_income_young - mean_income_older
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = 2 * (1 - pt(abs(t_score), df = df))
nyc = read.csv("../Data/New_York_City_Census.csv")
library(tidyverse)
df_2_sample_t_test = function(x, y) {
x = as_vector(x)
y = as_vector(y)
s2_x = var(x)
s2_y = var(y)
n_x = length(x)
n_y = length(y)
df_x = n_x - 1
df_y = n_y - 1
approx = (s2_x / n_x + s2_y / n_y)^2 /
(s2_x^2 / (n_x^2 * df_x) + s2_y^2 / (n_y^2 * df_y))
return(approx)
}
mean_age = mean(nyc$Age)
nyc_older_half = nyc %>% filter(nyc$Age > mean_age)
nyc_younger_half = nyc %>% filter(nyc$Age <= mean_age)
mean_income_young = mean(nyc_younger_half$Income)
mean_income_older = mean(nyc_older_half$Income)
var_income_young = var(nyc_younger_half$Income)
var_income_older = var(nyc_older_half$Income)
diff_income = mean_income_young - mean_income_older
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = 2 * (1 - pt(abs(t_score), df = df))
library(collegestats)
two_samp_t_test_neq(samp1_mean = mean_income_young, samp2_mean = mean_income_older, samp1_size = length(nyc_younger_half), samp2_size = length(nyc_older_half))
two_samp_t_test_neq(samp1_mean = mean_income_young, samp2_mean = mean_income_older, samp1_size = length(nyc_younger_half), samp2_size = length(nyc_older_half), s1 = var_income_young, s2 = var_income_older)
two_samp_t_test_neq(samp1_mean = mean_income_young, samp2_mean = mean_income_older, samp1_size = length(nyc_younger_half), samp2_size = length(nyc_older_half), s1 = sqrt(var_income_young), s2 = sqrt(var_income_older))
nyc = read.csv("../Data/New_York_City_Census.csv")
library(tidyverse)
df_2_sample_t_test = function(x, y) {
x = as_vector(x)
y = as_vector(y)
s2_x = var(x)
s2_y = var(y)
n_x = length(x)
n_y = length(y)
df_x = n_x - 1
df_y = n_y - 1
approx = (s2_x / n_x + s2_y / n_y)^2 /
(s2_x^2 / (n_x^2 * df_x) + s2_y^2 / (n_y^2 * df_y))
return(approx)
}
mean_age = mean(nyc$Age)
nyc_older_half = nyc %>% filter(nyc$Age > mean_age)
nyc_younger_half = nyc %>% filter(nyc$Age <= mean_age)
mean_income_young = mean(nyc_younger_half$Income)
mean_income_older = mean(nyc_older_half$Income)
var_income_young = var(nyc_younger_half$Income)
var_income_older = var(nyc_older_half$Income)
diff_income = mean_income_young - mean_income_older
alpha = 0.05
var = var_income_older / length(nyc_older_half) + var_income_young / length(nyc_younger_half)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = 2 * (1 - pt(abs(t_score), df = df))
two_samp_t_test_neq <- function(samp1_mean, samp2_mean, samp1_size, samp2_size, s1, s2, H0_diff = 0, alpha = 0.05, df = NULL) {
diff = samp1_mean - samp2_mean
diff_var = sqrt(s1^2 / samp1_size + s2^2 / samp2_size)
s2_x = s1^2
s2_y = s2^2
n_x = samp1_size
n_y = samp2_size
df_x = n_x - 1
df_y = n_y - 1
if(is.null(df)) {
df = (s2_x / n_x + s2_y / n_y)^2 /
(s2_x^2 / (n_x^2 * df_x) + s2_y^2 / (n_y^2 * df_y))
t_stat = diff / diff_var
cat(df)
p_val = (1 - pt(abs(t_stat), df = df)) + pt(t_stat, df = df)
return(data.frame("Reject H0" = p_val < alpha,
"p-value" = p_val,
"t-score" = t_stat))
}
t_stat = diff / diff_var
p_val = (1 - pt(abs(t_stat), df = df)) + pt(t_stat, df = df)
return(data.frame("Reject H0" = p_val < alpha,
"p-value" = p_val,
"t-score" = t_stat))
}
two_samp_t_test_neq(samp1_mean = mean_income_young, samp2_mean = mean_income_older, samp1_size = length(nyc_younger_half), samp2_size = length(nyc_older_half), s1 = sqrt(var_income_young), s2 = sqrt(var_income_older))
two_samp_t_test_neq <- function(samp1_mean, samp2_mean, samp1_size, samp2_size, s1, s2, H0_diff = 0, alpha = 0.05, df = NULL) {
diff = samp1_mean - samp2_mean
diff_var = sqrt(s1^2 / samp1_size + s2^2 / samp2_size)
s2_x = s1^2
s2_y = s2^2
n_x = samp1_size
n_y = samp2_size
df_x = n_x - 1
df_y = n_y - 1
if(is.null(df)) {
df = (s2_x / n_x + s2_y / n_y)^2 /
(s2_x^2 / (n_x^2 * df_x) + s2_y^2 / (n_y^2 * df_y))
t_stat = diff / diff_var
cat(df, "\n")
p_val = (1 - pt(abs(t_stat), df = df)) + pt(t_stat, df = df)
return(data.frame("Reject H0" = p_val < alpha,
"p-value" = p_val,
"t-score" = t_stat))
}
t_stat = diff / diff_var
p_val = (1 - pt(abs(t_stat), df = df)) + pt(t_stat, df = df)
return(data.frame("Reject H0" = p_val < alpha,
"p-value" = p_val,
"t-score" = t_stat))
}
two_samp_t_test_neq(samp1_mean = mean_income_young, samp2_mean = mean_income_older, samp1_size = length(nyc_younger_half), samp2_size = length(nyc_older_half), s1 = sqrt(var_income_young), s2 = sqrt(var_income_older))
two_samp_t_test_neq <- function(samp1_mean, samp2_mean, samp1_size, samp2_size, s1, s2, H0_diff = 0, alpha = 0.05, df = NULL) {
diff = samp1_mean - samp2_mean
diff_var = sqrt(s1^2 / samp1_size + s2^2 / samp2_size)
s2_x = s1
s2_y = s2
n_x = samp1_size
n_y = samp2_size
df_x = n_x - 1
df_y = n_y - 1
if(is.null(df)) {
df = (s2_x / n_x + s2_y / n_y)^2 /
(s2_x^2 / (n_x^2 * df_x) + s2_y^2 / (n_y^2 * df_y))
t_stat = diff / diff_var
cat(df, "\n")
p_val = (1 - pt(abs(t_stat), df = df)) + pt(t_stat, df = df)
return(data.frame("Reject H0" = p_val < alpha,
"p-value" = p_val,
"t-score" = t_stat))
}
t_stat = diff / diff_var
p_val = (1 - pt(abs(t_stat), df = df)) + pt(t_stat, df = df)
return(data.frame("Reject H0" = p_val < alpha,
"p-value" = p_val,
"t-score" = t_stat))
}
two_samp_t_test_neq(samp1_mean = mean_income_young, samp2_mean = mean_income_older, samp1_size = length(nyc_younger_half), samp2_size = length(nyc_older_half), s1 = sqrt(var_income_young), s2 = sqrt(var_income_older))
length(nyc_younger_half)
View(nyc_older_half)
View(nyc_older_half$Income)
length(nyc_younger_half$Income)
diff_income = mean_income_young - mean_income_older
alpha = 0.05
var = var_income_older / length(nyc_older_half$Income) + var_income_young / length(nyc_younger_half$Income)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = 2 * (1 - pt(abs(t_score), df = df))
diff_income = mean_income_older - mean_income_young
alpha = 0.05
var = var_income_older / length(nyc_older_half$Income) + var_income_young / length(nyc_younger_half$Income)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = 2 * (1 - pt(abs(t_score), df = df))
diff_income / sqrt(var)
two_samp_t_test_neq(samp1_mean = mean_income_young, samp2_mean = mean_income_older, samp1_size = length(nyc_younger_half$Income), samp2_size = length(nyc_older_half$Income), s1 = sqrt(var_income_young), s2 = sqrt(var_income_older))
nyc = read.csv("../Data/New_York_City_Census.csv")
library(tidyverse)
df_2_sample_t_test = function(x, y) {
x = as_vector(x)
y = as_vector(y)
s2_x = var(x)
s2_y = var(y)
n_x = length(x)
n_y = length(y)
df_x = n_x - 1
df_y = n_y - 1
approx = (s2_x / n_x + s2_y / n_y)^2 /
(s2_x^2 / (n_x^2 * df_x) + s2_y^2 / (n_y^2 * df_y))
return(approx)
}
mean_age = mean(nyc$Age)
nyc_older_half = nyc %>% filter(nyc$Age > mean_age)
nyc_younger_half = nyc %>% filter(nyc$Age <= mean_age)
mean_income_young = mean(nyc_younger_half$Income)
mean_income_older = mean(nyc_older_half$Income)
var_income_young = var(nyc_younger_half$Income)
var_income_older = var(nyc_older_half$Income)
diff_income = mean_income_older - mean_income_young
alpha = 0.05
var = var_income_older / length(nyc_older_half$Income) + var_income_young / length(nyc_younger_half$Income)
df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
qnorm(diff_income / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = qt(diff_income / sqrt(var), df = df)
p_val = 2 * (1 - pt(abs(t_score), df = df))
p_val
sqrt(var)
723 * 723
diff_income / sqrt(var)
qt(15, df = df)
qt(-13, df = df)
qt(-10, df = df)
qt(-8, df = df)
qt(-3, df = df)
qt(-1, df = df)
qt(1, df = df)
t_score = diff_income / sqrt(var)
p_val = 2 * (1 - pt(abs(t_score), df = df))
grad_rate_young = mean(nyc_younger_half$Completed_4YRs_College)
grad_rate__older = mean(nyc_older_half$Completed_4YRs_College)
var_grad_young = var(nyc_younger_half$Completed_4YRs_College)
var_grad_older = var(nyc_older_half$Completed_4YRs_College)
grad_rate_older = mean(nyc_older_half$Completed_4YRs_College)
diff_grad_rate = grad_rate__older - grad_rate_young
diff_grad_rate = grad_rate_older - grad_rate_young
alpha = 0.05
var = var_grad_older / length(nyc_older_half$Completed_4YRs_College) + var_grad_young / length(nyc_younger_half$Completed_4YRs_College)
df_2_sample_t_test(x = nyc_older_half$Completed_4YRs_College, y = nyc_younger_half$Completed_4YRs_College)
df_2_sample_t_test(x = nyc_older_half$Completed_4YRs_College, y = nyc_younger_half$Completed_4YRs_College)
df_2_sample_t_test(x = nyc_older_half$Completed_4YRs_College, y = nyc_younger_half$Completed_4YRs_College)
qnorm(diff_income / sqrt(var))
qnorm(diff_grad_rate / sqrt(var))
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = diff_income / sqrt(var)
p_val = 2 * (1 - pt(abs(t_score), df = df))
grad_rate_young = mean(nyc_younger_half$Completed_4YRs_College)
grad_rate_older = mean(nyc_older_half$Completed_4YRs_College)
var_grad_young = var(nyc_younger_half$Completed_4YRs_College)
var_grad_older = var(nyc_older_half$Completed_4YRs_College)
mean_age = mean(nyc$Age)
nyc_older_half = nyc %>% filter(nyc$Age > mean_age)
nyc_younger_half = nyc %>% filter(nyc$Age <= mean_age)
grad_rate_young = mean(nyc_younger_half$Completed_4YRs_College)
grad_rate_older = mean(nyc_older_half$Completed_4YRs_College)
var_grad_young = var(nyc_younger_half$Completed_4YRs_College)
var_grad_older = var(nyc_older_half$Completed_4YRs_College)
diff_grad_rate = grad_rate_older - grad_rate_young
nyc = read.csv("../Data/New_York_City_Census.csv")
library(tidyverse)
df_2_sample_t_test = function(x, y) {
x = as_vector(x)
y = as_vector(y)
s2_x = var(x)
s2_y = var(y)
n_x = length(x)
n_y = length(y)
df_x = n_x - 1
df_y = n_y - 1
approx = (s2_x / n_x + s2_y / n_y)^2 /
(s2_x^2 / (n_x^2 * df_x) + s2_y^2 / (n_y^2 * df_y))
return(approx)
}
mean_age = mean(nyc$Age)
nyc_older_half = nyc %>% filter(nyc$Age > mean_age)
nyc_younger_half = nyc %>% filter(nyc$Age <= mean_age)
mean_income_young = mean(nyc_younger_half$Income)
mean_income_older = mean(nyc_older_half$Income)
var_income_young = var(nyc_younger_half$Income)
var_income_older = var(nyc_older_half$Income)
diff_income = mean_income_older - mean_income_young
alpha = 0.05
var = var_income_older / length(nyc_older_half$Income) + var_income_young / length(nyc_younger_half$Income)
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = diff_income / sqrt(var)
p_val = 2 * (1 - pt(abs(t_score), df = df))
grad_rate_young = mean(nyc_younger_half$Completed_4YRs_College)
grad_rate_young = mean(nyc_younger_half$Completed_4YRs_College == "Yes")
grad_rate_older = mean(nyc_older_half$Completed_4YRs_College == "Yes")
var_grad_young = var(nyc_younger_half$Completed_4YRs_College == "Yes")
var_grad_older = var(nyc_older_half$Completed_4YRs_College == "Yes")
diff_grad_rate = grad_rate_older - grad_rate_young
var = var_grad_older / length(nyc_older_half$Completed_4YRs_College) + var_grad_young / length(nyc_younger_half$Completed_4YRs_College)
df = df_2_sample_t_test(x = nyc_older_half$Income, y = nyc_younger_half$Income)
t_score = diff_income / sqrt(var)
t_score = diff_grad_rate / sqrt(var)
# binomial distr
p = length(nyc_younger_half$Completed_4YRs_College == "Yes") + length(nyc_older_half$Completed_4YRs_College == "Yes")
qt(1, df = df)
length(nyc_older_half$Income) + length(nyc_younger_half$Income)
length(nyc_older_half$Completed_4YRs_College) + length(nyc_younger_half$Completed_4YRs_College)
length(nyc_older_half$Completed_4YRs_College) + length(nyc_younger_half$Completed_4YRs_College == "Yes")
View(nyc_younger_half)
length(nyc_older_half %>% filter(nyc_older_half$Completed_4YRs_College == "Yes"))
length((nyc_older_half %>% filter(nyc_older_half$Completed_4YRs_College == "Yes"))$Completed_$YRs_College)
view(nyc_older_half %>% filter(nyc_older_half$Completed_4YRs_College == "Yes"))
nyc_older_half %>% filter(nyc_older_half$Completed_4YRs_College == "Yes")
old_completed_college = nyc_older_half %>% filter(nyc_older_half$Completed_4YRs_College == "Yes")
View(old_completed_college)
young_completed_college = nyc_younger_half %>% nyc_younger_half$Completed_4YRs_College == "Yes"
old_completed_college = nyc_older_half %>% filter(nyc_older_half$Completed_4YRs_College == "Yes")
young_completed_college = nyc_younger_half %>% filter(nyc_younger_half$Completed_4YRs_College == "Yes")
view(nyc_older_half %>% filter(nyc_older_half$Completed_4YRs_College == "Yes"))
length(old_completed_college$Completed_4YRs_College)
p = length(old_completed_college) + length(young_completed_college) / (length(nyc_younger_half$Completed_4YRs_College) + length(nyc_older_half$Completed_4YRs_College) )
p = length(old_completed_college$Completed_4YRs_College) + length(young_completed_college$Completed_4YRs_College) / (length(nyc_younger_half$Completed_4YRs_College) + length(nyc_older_half$Completed_4YRs_College) )
p = (length(old_completed_college$Completed_4YRs_College) + length(young_completed_college$Completed_4YRs_College)) / (length(nyc_younger_half$Completed_4YRs_College) + length(nyc_older_half$Completed_4YRs_College) )
var_d_hat = p * (1 - p) * (1 / nyc_older_half$Completed_4YRs_College + 1 / nyc_younger_half$Completed_4YRs_College)
z = (grad_rate_older - grad_rate_young) / sqrt(var_d_hat)
var_d_hat = p * (1 - p) * (1 / nyc_older_half$Completed_4YRs_College + 1 / nyc_younger_half$Completed_4YRs_College)
var_d_hat = p * (1 - p) * (1 / nyc_older_half$Completed_4YRs_College + 1 / nyc_younger_half$Completed_4YRs_College)
var_d_hat = p * (1 - p) * (1 / length(nyc_older_half$Completed_4YRs_College) + 1 / length(nyc_younger_half$Completed_4YRs_College))
z = (grad_rate_older - grad_rate_young) / sqrt(var_d_hat)
p_value = pnorm(z)
# 3
m = 2
alpha_family = alpha
corrected_alpha = alpha_family / m
p_val < corrected_alpha
p_value < corrected_alpha
no_college_credit = 93
var_NCC = 3.7^2
mean_NCC = 4.17
no_college_credit = 93
var_NCC = 3.7^2
mean_NCC = 4.17
x2 = (no_college_credit - 1) * var_NCC / 20
pchisq(x2, df = 92)
f = var_NCC / 4.28^2
pf(f, df1 = 92, df2 = 27)
2 * pchisq(x2, df = 92) # 0.008949973
2 * pf(f, df1 = 92, df2 = 27) # 0.1545959
2 * pf(f, df1 = 92, df2 = 27) # 0.1545959
qchisq(.975, df = 18)
pchisq(31.52638, df = 18)
qchisq(.975, df = 18)
qchisq(.975, df = 18) * 18 / 12
qchisq(.025, df = 18)
qchisq(.975, df = 18) * 12 / 18
qchisq(.025, df = 18) * 12 / 18
25569522861 - 14995325372 - 5785989855
(25569522861 - 14995325372 - 5785989855 ) / 2
cov_WM = (25569522861 - 14995325372 - 5785989855 ) / 2
var_M = 14995325372
var_W = 5785989855
cor = cov_WM / (sqrt(var_M) * sqrt(var_W))
cor_choco_lemonade = -100 / (sqrt(125) * sqrt(109))
7 / (sqrt(2 * 29))
g1_beta_1_hat = 11336 / 36.2
g1_beta_0_hat = 22648 / 35.1
g1_beta_0_hat = 22648 - g1_beta_1_hat * 35.1
g2_beta_1_hat = 61557 / 33.1
g2_beta_0_hat = 68805 - g2_beta_1_hat * 33.5
g3_beta_1_heat = 41477 / 36.6
g3_beta_1_hat = 41477 / 36.6
g3_beta_0_hat = 36414 - g3_beta_1_hat * 34.8
g2_beta_1_hat = 61557 / 33.1
g2_beta_0_hat = 68805 - g2_beta_1_hat * 33.5
g3_beta_1_hat = 41477 / 36.6
g3_beta_0_hat = 36414 - g3_beta_1_hat * 34.8
g4_beta_1_hat = 128785 / 33.5
g4_beta_0_hat = 102274 - g4_beta_1_hat * 33.7
g4_beta_1_hat = 128785 / 33.5
g4_beta_0_hat = 102274 - g4_beta_1_hat * 33.7
g5_beta_1_hat = -40011 / 149
g5_beta_0_hat = 24444 - g5_beta_1_hat * 64.7
g6_beta_1_hat = -110661 / 122
g6_beta_0_hat = 73989 - g6_beta_1_hat * 61.5
g7_beta_1_hat = -61656 / 128
g7_beta_0_hat = 38255 - g7_beta_1_hat * 62.6
g8_beta_1_hat = -240633 / 121
g8_beta_0_hat = 111568 - g8_beta_1_hat * 61.6
g4_beta_1_hat = 128785 / 33.5
g4_beta_0_hat = 102274 - g4_beta_1_hat * 33.7
g5_beta_1_hat = -40011 / 149
g5_beta_0_hat = 24444 - g5_beta_1_hat * 64.7
g6_beta_1_hat = -110661 / 122
g6_beta_0_hat = 73989 - g6_beta_1_hat * 61.5
g7_beta_1_hat = -61656 / 128
g7_beta_0_hat = 38255 - g7_beta_1_hat * 62.6
g8_beta_1_hat = -240633 / 121
g8_beta_0_hat = 111568 - g8_beta_1_hat * 61.6
g1_beta_1_hat = 11336 / 36.2
g1_beta_0_hat = 22648 - g1_beta_1_hat * 35.1
g2_beta_1_hat = 61557 / 33.1
g2_beta_0_hat = 68805 - g2_beta_1_hat * 33.5
g3_beta_1_hat = 41477 / 36.6
g3_beta_0_hat = 36414 - g3_beta_1_hat * 34.8
g4_beta_1_hat = 128785 / 33.5
g4_beta_0_hat = 102274 - g4_beta_1_hat * 33.7
g5_beta_1_hat = -40011 / 149
g5_beta_0_hat = 24444 - g5_beta_1_hat * 64.7
g6_beta_1_hat = -110661 / 122
g6_beta_0_hat = 73989 - g6_beta_1_hat * 61.5
g7_beta_1_hat = -61656 / 128
beta_1_hat = c(g1_beta_1_hat, g2_beta_1_hat, g3_beta_1_hat, g4_beta_1_hat, g5_beta_1_hat, g6_beta_1_hat, g7_beta_1_hat, g8_beta_1_hat)
summarise(beta_1_hat)
max(beta_1_hat)
#3
min(beta_1_hat)
view(beta_1_hat)
view(beta_1_hat)
covar = -.66521 * 1.84 / .217
beta_1_hat = -.66521 * 1.84 / .217
beta_0_hat = 3.94 - beta_1_hat * .406
